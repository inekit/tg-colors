{"version":3,"file":"js/4.1463130e.js","mappings":"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,EAAMwO,IAAI6G,UAAUnjB,KAAKhG,OACtC8T,EAAMwO,IAAI6G,UAAUnjB,KAAKstB,GAAc,CAAEn0B,MAAOA,EAAO6B,MAAO,GAC9D8S,EAAMwO,IAAI6G,UAAUyG,KAAK,IAAMzwB,GAASm0B,GAExCA,EAAaxf,EAAMwO,IAAI6G,UAAUyG,KAAK,IAAMzwB,GAG9Cq0B,EAAgB1f,EAAMwO,IAAI6G,UAAUnjB,KAAKstB,GAAYtyB,MACrD8S,EAAMwO,IAAI6G,UAAUnjB,KAAKstB,GAAYtyB,QAErC8S,EAAMrQ,KAAK,CACTxE,KAAM,eACNb,GAAIk1B,EACJxN,MAAO0N,EACPtgB,MAAOY,EAAMZ,SAIjBY,EAAMoT,IAAMA,EACZpT,EAAMqT,OAAS5Z,GACR,IACT,CAKA,IAAIkmB,GAAc,CAChB,OACA,MACA,aACA,MACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,KACA,SACA,OACA,OACA,QACA,MACA,OACA,KACA,OACA,OACA,MACA,OACA,YACA,WACA,YACA,WACA,OACA,SACA,MACA,OACA,QACA,OACA,UACA,OACA,MACA,KACA,MACA,OACA,kBACA,MACA,OACA,OACA,UACA,UACA,QACA,QACA,MACA,OACA,MACA,OACA,YACA,aACA,MACA,MACA,SACA,OACA,cACA,SACA,MACA,KACA,MACA,QACA,KACA,MACA,OACA,cACA,cACA,eACA,OACA,UACA,UACA,YACA,MACA,MACA,MACA,MACA,aACA,KACA,UACA,UACA,OACA,SACA,SACA,mBACA,0BACA,UACA,MACA,kBACA,qBACA,MACA,MACA,OACA,WACA,OACA,SACA,OACA,KACA,MACA,eACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,UACA,SACA,QACA,SACA,OACA,SACA,UACA,MACA,UACA,QACA,SACA,MACA,QACA,MACA,OACA,YACA,WACA,QACA,OACA,QACA,MACA,WACA,MACA,QACA,OACA,aACA,OACA,MACA,QACA,MACA,SACA,UACA,MA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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/views/Items.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddItemModal.vue","webpack://@coreui/coreui-free-vue-admin-template/./node_modules/turndown/lib/turndown.browser.es.js","webpack://@coreui/coreui-free-vue-admin-template/./node_modules/marked/lib/marked.esm.js","webpack://@coreui/coreui-free-vue-admin-template/./node_modules/remarkable/dist/esm/index.browser.js","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddItemModal.vue?860e","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Items.vue?bb6c"],"sourcesContent":["<template>\r\n  <div>\r\n    <AddItemModal :visible=\"formVisible\" :formData=\"formData\" :mode=\"formMode\" />\r\n    <Table :fields=\"tableFieldNames\" :postData=\"get\" :actions=\"dataActions\" :rows=\"rows\" editMode=\"form\" name=\"Позиции\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddItemModal from '@/components/AddItemModal.vue'\r\nimport Table from '@/components/Table.vue'\r\nimport eventBus from '../eventBus'\r\n\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n  credentials: 'include'\r\n\r\n})\r\n\r\nexport default {\r\n  components: {\r\n    AddItemModal,\r\n    Table,\r\n  },\r\n  props: ['tag', 'project'],\r\n  data() {\r\n    return {\r\n      myApi: myApi,\r\n      formVisible: false,\r\n      formData: {},\r\n      rows: [],\r\n      dataActions: {\r\n        Дублировать: { action: this.duble, color: 'primary' },\r\n        Изменить: { action: this.change, color: 'warning' },\r\n        Удалить: { action: this.delete, color: 'danger' },\r\n      },\r\n      tableFieldNames: [\r\n        {\r\n          name: 'title',\r\n          title: 'Название',\r\n        },\r\n        {\r\n          name: 'description',\r\n          title: 'Описание',\r\n        },\r\n        {\r\n          name: 'publication_date',\r\n          title: 'Дата добавления',\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  created() {\r\n    eventBus.$on('addNewPost', () => {\r\n      this.formMode = 'new'\r\n      this.formData = {\r\n        category: this.$route.params.categoryName,\r\n      }\r\n      this.formVisible = true\r\n    })\r\n    eventBus.$on('closeModal', () => {\r\n      this.formVisible = false\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postAdded', () => {\r\n      this.formVisible = false\r\n      //this.rows.unshift(this.formData)\r\n      this.get()\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postEdited', () => {\r\n      this.formVisible = false\r\n      this.get()\r\n      this.formData = {}\r\n    })\r\n  },\r\n  methods: {\r\n    change(elObj) {\r\n      this.formVisible = true\r\n      elObj.tags_array = new Set(elObj.tags_array)\r\n      this.formData = elObj\r\n      console.log(elObj)\r\n      this.formMode = 'edit'\r\n    },\r\n    constractFromData(elObj) {\r\n      var formData = new FormData()\r\n\r\n      formData.append('title', elObj.title)\r\n      formData.append('description', elObj.description)\r\n      elObj.image_list?.forEach(v => {\r\n        formData.append('images[]', v);\r\n      });\r\n      elObj.category_name &&\r\n        formData.append('categoryName', elObj.category_name)\r\n\r\n      const options_object = {}\r\n\r\n      for (let { size, material, price } of elObj.options_array) {\r\n        if (!material && !size && !price) continue;\r\n        options_object[material] ? options_object[material][size] = price : options_object[material] = { size: price }\r\n      }\r\n      formData.append('optionsObject', JSON.stringify(options_object))\r\n\r\n      return formData\r\n    },\r\n    duble(elObj) {\r\n      try {\r\n        const formData = this.constractFromData(elObj)\r\n\r\n        myApi\r\n          .post(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postAdded')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n      }\r\n    },\r\n    get(take, page) {\r\n      console.log(this.tag)\r\n      return myApi\r\n        .get(this.$store.state.publicPath + '/api/admin/items/', {\r\n          params: {\r\n            take: take ?? 10,\r\n            page: page ?? 1,\r\n            tagsArray: this.$route.params.tag\r\n              ? [this.$route.params.tag]\r\n              : undefined,\r\n            category: this.$route.params.categoryName,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.data?.length > 0) this.rows = res.data\r\n          return res.data\r\n        })\r\n        .catch((error) => {\r\n          eventBus.$emit('noresponse', error)\r\n          return false\r\n        })\r\n    },\r\n    delete(item) {\r\n      const result = confirm('Вы действительно хотите удалить позицию из каталога?')\r\n      if (result)\r\n        return myApi\r\n          .delete(this.$store.state.publicPath + '/api/admin/items/', {\r\n            data: { id: item.id },\r\n          })\r\n          .then(() => {\r\n            this.get()\r\n            eventBus.$emit('postDeleted')\r\n          })\r\n          .catch((error) => {\r\n            eventBus.$emit('noresponse', error)\r\n          })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nbutton {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","<template>\r\n  <CButton color=\"primary\" @click=\"addNewPost\">Добавить товар</CButton>\r\n  <CModal size=\"xl\" backdrop=\"static\" alignment=\"center\" :visible=\"visible\" @close=\"closeModal\">\r\n    <CForm novalidate :validated=\"formValid\" ref=\"add-file-form\" @change=\"wregert\"\r\n      @submit.prevent=\"mode === 'new' ? addNewing() : editNewing()\" class=\"add-user\" style=\"display: 'none'\">\r\n      <CModalHeader>\r\n        <CModalTitle>{{\r\n          mode === 'new' ? 'Добавить товар' : 'Редактировать товар'\r\n        }}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CFormInput class=\"mb-3\" v-model=\"formData.title\" placeholder=\"Заголовок\" id=\"inputHeader\"\r\n          aria-describedby=\"inputGroupPrepend\" feedbackValid=\"Все ок\" feedbackInvalid=\"Введите корректный заголовок\"\r\n          required />\r\n        <div class=\"projects-list\">\r\n          <span>Категория</span>\r\n          <CFormCheck v-for=\"project in projects\" :key=\"project.name\" :id=\"project.name\"\r\n            :checked=\"project.name === formData.category_name\" @change=\"changeP\" type=\"radio\" name=\"project-name\"\r\n            :value=\"project.name\" :label=\"project.name\" />\r\n          <CFormCheck id=\"null-name\" :checked=\"!formData.category_name\" @change=\"changeP\" type=\"radio\" name=\"project-name\"\r\n            value=\"\" label=\"Без категорий\" />\r\n        </div>\r\n\r\n        <div class=\"options-shedle\">\r\n          <span>Опции</span>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <td>Размер<br />\r\n                  Материал</td>\r\n                <td v-for=\"sizeName in distinct_sizes\" :key=\"'sizeh-' + sizeName\">\r\n                  {{ sizeName }}\r\n                  <CButton color=\"secondary\" @click=\"dropSize(sizeName)\">X</CButton>\r\n                </td>\r\n                <td>\r\n                  <CInputGroup class=\"\">\r\n                    <CFormInput placeholder=\"Новый размер\" type=\"text\" v-model=\"tempSize\" />\r\n                    <CButton class=\"add-button\" type=\"button\" color=\"secondary\" @click=\"addSize(tempSize)\"\r\n                      variant=\"outline\">Добавить</CButton>\r\n                  </CInputGroup>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"materialName in distinct_materials\" :key=\"'material-' + materialName\">\r\n                <td>\r\n                  {{ materialName }}\r\n                  <CButton color=\"secondary\" @click=\"dropMaterial(materialName)\">X</CButton>\r\n                </td>\r\n                <td v-for=\"sizeName in distinct_sizes\" :key=\"'size-' + sizeName\">\r\n                  <CFormInput type=\"text\" v-model=\"options_object[materialName][sizeName]\" />\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <CInputGroup class=\"\">\r\n                    <CFormInput placeholder=\"Новый материал\" type=\"text\" v-model=\"tempMaterial\" />\r\n                    <CButton class=\"add-button\" type=\"button\" color=\"secondary\" @click=\"addMaterial(tempMaterial)\"\r\n                      variant=\"outline\">Добавить\r\n                    </CButton>\r\n                  </CInputGroup>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <CFormInput type=\"file\" accept=\"image/*\" multiple=\"multiple\" ref=\"file\" @change=\"previewMultiImage\" class=\"mb-3\"\r\n          label=\"Превью\" placeholder=\"Превью\" />\r\n        <div class=\"border p-2 mt-3 preview-container\">\r\n          <template v-if=\"preview_list?.length\">\r\n            <div v-for=\"item, index in preview_list\" :key=\"index\">\r\n              <img :src=\"item\" class=\"img-fluid\" />\r\n              <button @click.prevent=\"dropFile(index)\">Х</button>\r\n            </div>\r\n          </template>\r\n        </div>\r\n        <QuillEditor theme=\"snow\" toolbar=\"essential\" ref=\"postTextEditor\" id=\"postTextEditor\"\r\n          placeholder=\"Краткое описание\" />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" @click=\"closeModal\"> Отменить </CButton>\r\n        <CButton v-show=\"mode === 'new'\" color=\"primary\" type=\"submit\">Добавить</CButton>\r\n        <CButton v-show=\"mode === 'edit'\" color=\"primary\" type=\"submit\">Редактировать</CButton>\r\n      </CModalFooter>\r\n    </CForm>\r\n  </CModal>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n})\r\nimport { QuillEditor } from '@vueup/vue-quill'\r\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\r\nimport TurndownService from 'turndown'\r\nimport { marked } from 'marked'\r\nimport { Remarkable } from 'remarkable';\r\n//import * as DOMPurify from 'dompurify'\r\nimport eventBus from '../eventBus'\r\n\r\nexport default {\r\n  components: { QuillEditor },\r\n  props: {\r\n    mode: {\r\n      required: true,\r\n      type: String,\r\n      validator: (value) => ['new', 'edit'].includes(value.toLowerCase()),\r\n    },\r\n    visible: false,\r\n    formData: {\r\n      title: '',\r\n      text: '',\r\n      description: '',\r\n      preview: '',\r\n      category_name: '',\r\n      image_list: [],\r\n      tags_array: new Set(),\r\n      options_object: {},\r\n      options_array: [],\r\n    },\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      textMd2: '',\r\n      textEditMode: 'md2',\r\n      formValid: false,\r\n      preview_list: [],\r\n      options_object: {\r\n        \"Материал\": {\r\n          \"Размер 1\": 2000,\r\n          \"Размер 2\": 3000\r\n        }\r\n      },\r\n      distinct_materials: [],\r\n      distinct_sizes: [],\r\n      tempSize: 0,\r\n      tempMaterial: 0,\r\n    }\r\n  },\r\n  updated() {\r\n    this.options_object = {};\r\n    this.formData.options_array = this.formData.options_array?.\r\n      filter(({ material, price, size }) => !material && !size && !price ? false : true)\r\n    this.distinct_materials = [...new Set(this.formData.options_array?.map(({ material }) => material))]\r\n    this.distinct_sizes = [...new Set(this.formData.options_array?.map(({ size }) => size))]\r\n    const md = new Remarkable('full', {\r\n      html: true,\r\n      xhtmlOut: false,\r\n      breaks: false,\r\n    });\r\n    console.log(md.render(this.formData.description?.replaceAll(\"\\r\\n\\r\\n\", \"<br/>\")))\r\n    console.log(marked.parse(this.formData.description?.replaceAll(\"\\r\\n\\r\\n\", \"<br/>\")))\r\n\r\n    this.formData.description && this.$refs.postTextEditor.pasteHTML(\r\n      marked.parse(this.formData.description?.replaceAll(\"\\r\\n\\r\\n\", \"<span><br/><span/>\\r\\n\\r\\n\")))\r\n\r\n    for (let { size, material, price } of this.formData.options_array) {\r\n      this.options_object[material] ? this.options_object[material][size] = price :\r\n        this.options_object[material] = { [size]: price }\r\n    }\r\n\r\n    console.log(this.options_object)\r\n\r\n\r\n    this.preview_list = this.formData.image_list?.filter(el => el)?.map(preview_name => `${this.$store.state.publicPath}/public/pics/${preview_name}`)\r\n\r\n    document.getElementsByClassName('ql-toolbar')?.[0]?.classList.add('hidden')\r\n  },\r\n  async mounted() {\r\n    this.projects = await this.getProjects()\r\n    console.log(this.tags, this.projects)\r\n  },\r\n  methods: {\r\n    addMaterial(name) {\r\n      let size_template = Object.values(this.options_object)?.[0] ?? {}\r\n      console.log(size_template)\r\n      size_template = Object.fromEntries(Object.entries(size_template)?.map(([key]) => [key, 0]))\r\n      console.log(size_template)\r\n\r\n      this.options_object[name] = size_template\r\n\r\n      this.distinct_materials.push(name)\r\n\r\n      this.tempMaterial = \"\"\r\n    },\r\n    addSize(name) {\r\n      const new_oo_entries = Object.entries(this.options_object)?.map(([key, value]) => [key, Object.assign(value ?? {}, { [name]: 0 })])\r\n      this.options_object = Object.fromEntries(new_oo_entries)\r\n      this.tempSize = \"\"\r\n      this.distinct_sizes.push(name)\r\n\r\n    },\r\n    dropMaterial(name) {\r\n      delete this.options_object[name]\r\n      this.distinct_materials = this.distinct_materials?.filter(el => el !== name)\r\n\r\n    },\r\n    dropSize(name) {\r\n      for (let key in this.options_object) {\r\n        delete this.options_object[key][name]\r\n      }\r\n      this.distinct_sizes = this.distinct_sizes?.filter(el => el !== name)\r\n    },\r\n    async getProjects() {\r\n      return await myApi\r\n        .get(this.$store.state.publicPath + '/api/categories/')\r\n        .then((res) => {\r\n          return res.data\r\n        })\r\n        .catch((error) => {\r\n          eventBus.$emit('noresponse', error)\r\n        })\r\n    },\r\n    previewMultiImage(event) {\r\n      var input = event.target;\r\n      var count = input.files.length;\r\n      var index = 0;\r\n      this.formData.preview = input.files[0]\r\n      if (!this.preview_list) this.preview_list = []\r\n      if (!this.formData.image_list) this.formData.image_list = []\r\n\r\n      if (input.files) {\r\n        while (count--) {\r\n          var reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            this.preview_list.push(e.target.result);\r\n          }\r\n          this.formData.image_list.push(input.files[index]);\r\n          reader.readAsDataURL(input.files[index]);\r\n          index++;\r\n        }\r\n      }\r\n    },\r\n    reset() {\r\n      this.formData.image_list = [];\r\n      this.preview_list = [];\r\n    },\r\n    dropFile(index) {\r\n      this.formData.image_list?.splice(index, 1);\r\n      this.preview_list?.splice(index, 1);\r\n\r\n    },\r\n    addNewPost() {\r\n      eventBus.$emit('addNewPost')\r\n    },\r\n    changeP(e) {\r\n      this.formData.category_name = e.target.value\r\n    },\r\n    closeModal() {\r\n      eventBus.$emit('closeModal')\r\n    },\r\n    constractFromData(isEdit) {\r\n      if (!this.formData.title || !this.$refs.postTextEditor.getHTML())\r\n        throw new Error()\r\n\r\n      var formData = new FormData()\r\n\r\n      formData.append('title', this.formData.title)\r\n\r\n      const turndownService = new TurndownService({\r\n        headingStyle: \"atx\",\r\n        //bulletListMarker: \"-\",\r\n        //fence: \"~~~\",\r\n        //emDelimiter: \"*\",\r\n      })\r\n      formData.append(\r\n        'description',\r\n        turndownService.turndown(this.$refs.postTextEditor.getHTML()),\r\n      )\r\n\r\n      this.formData.image_list?.forEach(v => {\r\n        formData.append('images[]', v);\r\n      });\r\n\r\n      this.formData.category_name &&\r\n        formData.append('categoryName', this.formData.category_name)\r\n\r\n\r\n      formData.append('optionsObject', JSON.stringify(this.options_object))\r\n\r\n      isEdit && formData.append('id', this.formData.id)\r\n\r\n      return formData\r\n    },\r\n    addNewing() {\r\n      try {\r\n        const formData = this.constractFromData()\r\n\r\n        myApi\r\n          .post(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postAdded')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n    editNewing() {\r\n      try {\r\n        const formData = this.constractFromData(true)\r\n\r\n        myApi\r\n          .put(this.$store.state.publicPath + '/api/admin/items', formData, {\r\n            headers: {\r\n              'Content-Type': `multipart/form-data`,\r\n\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postEdited')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        console.log(e)\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .hidden {\r\n  display: none;\r\n}\r\n\r\n::v-deep .ql-toolbar.ql-snow {\r\n  display: block !important;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dddddd;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table th {\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  background: #efefef;\r\n  border: 1px solid #dddddd;\r\n}\r\n\r\n.table td {\r\n  border: 1px solid #dddddd;\r\n  padding: 5px;\r\n  position: relative;\r\n\r\n  .btn.btn-secondary {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n  }\r\n}\r\n\r\n.add-button {\r\n  margin: 0;\r\n}\r\n\r\n.preview-container {\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n\r\n  &>div {\r\n    max-width: 24%;\r\n    position: relative;\r\n\r\n    button {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n.tags-cloud,\r\n.projects-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  &>* {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &>span {\r\n    flex: 0 0 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n</style>\r\n","function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (window.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))[\\s\\S]*?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = merge({}, pack);\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","var textarea;\n\nfunction decodeEntity(name) {\n  textarea = textarea || document.createElement('textarea');\n  textarea.innerHTML = '&' + name + ';';\n  return textarea.value;\n}\n\n/**\n * Utility functions\n */\n\nfunction typeOf(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return typeOf(obj) === '[object String]';\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return object\n    ? hasOwn.call(object, key)\n    : false;\n}\n\n// Extend objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = [].slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\nvar NAMED_ENTITY_RE   = /&([a-z#][a-z0-9]{1,31});/gi;\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n  var decoded = decodeEntity(name);\n\n  if (name !== decoded) {\n    return decoded;\n  } else if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n  return match;\n}\n\nfunction replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  isString: isString,\n  has: has,\n  assign: assign,\n  unescapeMd: unescapeMd,\n  isValidEntityCode: isValidEntityCode,\n  fromCodePoint: fromCodePoint,\n  replaceEntities: replaceEntities,\n  escapeHtml: escapeHtml\n});\n\n/**\n * Renderer rules cache\n */\n\nvar rules = {};\n\n/**\n * Blockquotes\n */\n\nrules.blockquote_open = function(/* tokens, idx, options, env */) {\n  return '<blockquote>\\n';\n};\n\nrules.blockquote_close = function(tokens, idx /*, options, env */) {\n  return '</blockquote>' + getBreak(tokens, idx);\n};\n\n/**\n * Code\n */\n\nrules.code = function(tokens, idx /*, options, env */) {\n  if (tokens[idx].block) {\n    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n  }\n  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\n/**\n * Fenced code blocks\n */\n\nrules.fence = function(tokens, idx, options, env, instance) {\n  var token = tokens[idx];\n  var langClass = '';\n  var langPrefix = options.langPrefix;\n  var langName = '', fences, fenceName;\n  var highlighted;\n\n  if (token.params) {\n\n    //\n    // ```foo bar\n    //\n    // Try custom renderer \"foo\" first. That will simplify overwrite\n    // for diagrams, latex, and any other fenced block with custom look\n    //\n\n    fences = token.params.split(/\\s+/g);\n    fenceName = fences.join(' ');\n\n    if (has(instance.rules.fence_custom, fences[0])) {\n      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n    }\n\n    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n    langClass = ' class=\"' + langPrefix + langName + '\"';\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight.apply(options.highlight, [ token.content ].concat(fences))\n      || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  return '<pre><code' + langClass + '>'\n        + highlighted\n        + '</code></pre>'\n        + getBreak(tokens, idx);\n};\n\nrules.fence_custom = {};\n\n/**\n * Headings\n */\n\nrules.heading_open = function(tokens, idx /*, options, env */) {\n  return '<h' + tokens[idx].hLevel + '>';\n};\nrules.heading_close = function(tokens, idx /*, options, env */) {\n  return '</h' + tokens[idx].hLevel + '>\\n';\n};\n\n/**\n * Horizontal rules\n */\n\nrules.hr = function(tokens, idx, options /*, env */) {\n  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n};\n\n/**\n * Bullets\n */\n\nrules.bullet_list_open = function(/* tokens, idx, options, env */) {\n  return '<ul>\\n';\n};\nrules.bullet_list_close = function(tokens, idx /*, options, env */) {\n  return '</ul>' + getBreak(tokens, idx);\n};\n\n/**\n * List items\n */\n\nrules.list_item_open = function(/* tokens, idx, options, env */) {\n  return '<li>';\n};\nrules.list_item_close = function(/* tokens, idx, options, env */) {\n  return '</li>\\n';\n};\n\n/**\n * Ordered list items\n */\n\nrules.ordered_list_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n  return '<ol' + order + '>\\n';\n};\nrules.ordered_list_close = function(tokens, idx /*, options, env */) {\n  return '</ol>' + getBreak(tokens, idx);\n};\n\n/**\n * Paragraphs\n */\n\nrules.paragraph_open = function(tokens, idx /*, options, env */) {\n  return tokens[idx].tight ? '' : '<p>';\n};\nrules.paragraph_close = function(tokens, idx /*, options, env */) {\n  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n};\n\n/**\n * Links\n */\n\nrules.link_open = function(tokens, idx, options /* env */) {\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var target = options.linkTarget ? (' target=\"' + options.linkTarget + '\"') : '';\n  return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n};\nrules.link_close = function(/* tokens, idx, options, env */) {\n  return '</a>';\n};\n\n/**\n * Images\n */\n\nrules.image = function(tokens, idx, options /*, env */) {\n  var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n  var suffix = options.xhtmlOut ? ' /' : '';\n  return '<img' + src + alt + title + suffix + '>';\n};\n\n/**\n * Tables\n */\n\nrules.table_open = function(/* tokens, idx, options, env */) {\n  return '<table>\\n';\n};\nrules.table_close = function(/* tokens, idx, options, env */) {\n  return '</table>\\n';\n};\nrules.thead_open = function(/* tokens, idx, options, env */) {\n  return '<thead>\\n';\n};\nrules.thead_close = function(/* tokens, idx, options, env */) {\n  return '</thead>\\n';\n};\nrules.tbody_open = function(/* tokens, idx, options, env */) {\n  return '<tbody>\\n';\n};\nrules.tbody_close = function(/* tokens, idx, options, env */) {\n  return '</tbody>\\n';\n};\nrules.tr_open = function(/* tokens, idx, options, env */) {\n  return '<tr>';\n};\nrules.tr_close = function(/* tokens, idx, options, env */) {\n  return '</tr>\\n';\n};\nrules.th_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<th'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.th_close = function(/* tokens, idx, options, env */) {\n  return '</th>';\n};\nrules.td_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<td'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.td_close = function(/* tokens, idx, options, env */) {\n  return '</td>';\n};\n\n/**\n * Bold\n */\n\nrules.strong_open = function(/* tokens, idx, options, env */) {\n  return '<strong>';\n};\nrules.strong_close = function(/* tokens, idx, options, env */) {\n  return '</strong>';\n};\n\n/**\n * Italicize\n */\n\nrules.em_open = function(/* tokens, idx, options, env */) {\n  return '<em>';\n};\nrules.em_close = function(/* tokens, idx, options, env */) {\n  return '</em>';\n};\n\n/**\n * Strikethrough\n */\n\nrules.del_open = function(/* tokens, idx, options, env */) {\n  return '<del>';\n};\nrules.del_close = function(/* tokens, idx, options, env */) {\n  return '</del>';\n};\n\n/**\n * Insert\n */\n\nrules.ins_open = function(/* tokens, idx, options, env */) {\n  return '<ins>';\n};\nrules.ins_close = function(/* tokens, idx, options, env */) {\n  return '</ins>';\n};\n\n/**\n * Highlight\n */\n\nrules.mark_open = function(/* tokens, idx, options, env */) {\n  return '<mark>';\n};\nrules.mark_close = function(/* tokens, idx, options, env */) {\n  return '</mark>';\n};\n\n/**\n * Super- and sub-script\n */\n\nrules.sub = function(tokens, idx /*, options, env */) {\n  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n};\nrules.sup = function(tokens, idx /*, options, env */) {\n  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n};\n\n/**\n * Breaks\n */\n\nrules.hardbreak = function(tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\nrules.softbreak = function(tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n/**\n * Text\n */\n\nrules.text = function(tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n/**\n * Content\n */\n\nrules.htmlblock = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\nrules.htmltag = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n/**\n * Abbreviations, initialism\n */\n\nrules.abbr_open = function(tokens, idx /*, options, env */) {\n  return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n};\nrules.abbr_close = function(/* tokens, idx, options, env */) {\n  return '</abbr>';\n};\n\n/**\n * Footnotes\n */\n\nrules.footnote_ref = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n};\nrules.footnote_block_open = function(tokens, idx, options) {\n  var hr = options.xhtmlOut\n    ? '<hr class=\"footnotes-sep\" />\\n'\n    : '<hr class=\"footnotes-sep\">\\n';\n  return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n};\nrules.footnote_block_close = function() {\n  return '</ol>\\n</section>\\n';\n};\nrules.footnote_open = function(tokens, idx) {\n  var id = Number(tokens[idx].id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n};\nrules.footnote_close = function() {\n  return '</li>\\n';\n};\nrules.footnote_anchor = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\n};\n\n/**\n * Definition lists\n */\n\nrules.dl_open = function() {\n  return '<dl>\\n';\n};\nrules.dt_open = function() {\n  return '<dt>';\n};\nrules.dd_open = function() {\n  return '<dd>';\n};\nrules.dl_close = function() {\n  return '</dl>\\n';\n};\nrules.dt_close = function() {\n  return '</dt>\\n';\n};\nrules.dd_close = function() {\n  return '</dd>\\n';\n};\n\n/**\n * Helper functions\n */\n\nfunction nextToken(tokens, idx) {\n  if (++idx >= tokens.length - 2) {\n    return idx;\n  }\n  if ((tokens[idx].type === 'paragraph_open' && tokens[idx].tight) &&\n      (tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0) &&\n      (tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight)) {\n    return nextToken(tokens, idx + 2);\n  }\n  return idx;\n}\n\n/**\n * Check to see if `\\n` is needed before the next token.\n *\n * @param  {Array} `tokens`\n * @param  {Number} `idx`\n * @return {String} Empty string or newline\n * @api private\n */\n\nvar getBreak = rules.getBreak = function getBreak(tokens, idx) {\n  idx = nextToken(tokens, idx);\n  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n    return '';\n  }\n  return '\\n';\n};\n\n/**\n * Renderer class. Renders HTML and exposes `rules` to allow\n * local modifications.\n */\n\nfunction Renderer() {\n  this.rules = assign({}, rules);\n\n  // exported helper, for custom rules only\n  this.getBreak = rules.getBreak;\n}\n\n/**\n * Render a string of inline HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = 0;\n  var result = '';\n\n  while (len--) {\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\n  }\n\n  return result;\n};\n\n/**\n * Render a string of HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = -1;\n  var result = '';\n\n  while (++i < len) {\n    if (tokens[i].type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else {\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\n    }\n  }\n  return result;\n};\n\n/**\n * Ruler is a helper class for building responsibility chains from\n * parse rules. It allows:\n *\n *   - easy stack rules chains\n *   - getting main chain and named chains content (as arrays of functions)\n *\n * Helper methods, should not be used directly.\n * @api private\n */\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // { name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ] }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - digital anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n/**\n * Find the index of a rule by `name`.\n *\n * @param  {String} `name`\n * @return {Number} Index of the given `name`\n * @api private\n */\n\nRuler.prototype.__find__ = function (name) {\n  var len = this.__rules__.length;\n  var i = -1;\n\n  while (len--) {\n    if (this.__rules__[++i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Build the rules lookup cache\n *\n * @api private\n */\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n/**\n * Ruler public methods\n * ------------------------------------------------\n */\n\n/**\n * Replace rule function\n *\n * @param  {String} `name` Rule name\n * @param  {Function `fn`\n * @param  {Object} `options`\n * @api private\n */\n\nRuler.prototype.at = function (name, fn, options) {\n  var idx = this.__find__(name);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[idx].fn = fn;\n  this.__rules__[idx].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain before given the `ruleName`.\n *\n * @param  {String}   `beforeName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var idx = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(idx, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain after the given `ruleName`.\n *\n * @param  {String}   `afterName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var idx = this.__find__(afterName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(idx + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the end of chain.\n *\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @return {String}\n */\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Enable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to enable\n * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n * @api private\n */\n\nRuler.prototype.enable = function (list, strict) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // In strict mode disable all existing rules first\n  if (strict) {\n    this.__rules__.forEach(function (rule) {\n      rule.enabled = false;\n    });\n  }\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Disable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to disable\n * @api private\n */\n\nRuler.prototype.disable = function (list) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n/**\n * Get a rules list as an array of functions.\n *\n * @param  {String} `chainName`\n * @return {Object}\n * @api private\n */\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n  return this.__cache__[chainName] || [];\n};\n\nfunction block(state) {\n\n  if (state.inlineMode) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.replace(/\\n/g, ' ').trim(),\n      level: 0,\n      lines: [ 0, 1 ],\n      children: []\n    });\n\n  } else {\n    state.block.parse(state.src, state.options, state.env, state.tokens);\n  }\n}\n\n// Inline parser state\n\nfunction StateInline(src, parserInline, options, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.options = options;\n  this.parser = parserInline;\n  this.tokens = outTokens;\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = [];        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  // Link parser state vars\n\n  this.isInLabel = false; // Set true when seek link label - we should disable\n                          // \"paired\" rules (emphasis, strikes) to not skip\n                          // tailing `]`\n\n  this.linkLevel = 0;     // Increment for each nesting link. Used to prevent\n                          // nesting in definitions\n\n  this.linkContent = '';  // Temporary storage for link url\n\n  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n                                 // (backtrack optimization)\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  this.tokens.push({\n    type: 'text',\n    content: this.pending,\n    level: this.pendingLevel\n  });\n  this.pending = '';\n};\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (token) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  this.tokens.push(token);\n  this.pendingLevel = this.level;\n};\n\n// Store value to cache.\n// !!! Implementation has parser-specific optimizations\n// !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n//\nStateInline.prototype.cacheSet = function (key, val) {\n  for (var i = this.cache.length; i <= key; i++) {\n    this.cache.push(0);\n  }\n\n  this.cache[key] = val;\n};\n\n// Get cache value\n//\nStateInline.prototype.cacheGet = function (key) {\n  return key < this.cache.length ? this.cache[key] : 0;\n};\n\n/**\n * Parse link labels\n *\n * This function assumes that first character (`[`) already matches;\n * returns the end of the label.\n *\n * @param  {Object} state\n * @param  {Number} start\n * @api private\n */\n\nfunction parseLinkLabel(state, start) {\n  var level, found, marker,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos,\n      oldFlag = state.isInLabel;\n\n  if (state.isInLabel) { return -1; }\n\n  if (state.labelUnmatchedScopes) {\n    state.labelUnmatchedScopes--;\n    return -1;\n  }\n\n  state.pos = start + 1;\n  state.isInLabel = true;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5B /* [ */) {\n      level++;\n    } else if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n    state.labelUnmatchedScopes = 0;\n  } else {\n    state.labelUnmatchedScopes = level - 1;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n  state.isInLabel = oldFlag;\n\n  return labelEnd;\n}\n\n// Parse abbreviation definitions, i.e. `*[abbr]: description`\n\n\nfunction parseAbbr(str, parserInline, options, env) {\n  var state, labelEnd, pos, max, label, title;\n\n  if (str.charCodeAt(0) !== 0x2A/* * */) { return -1; }\n  if (str.charCodeAt(1) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parserInline, options, env, []);\n  labelEnd = parseLinkLabel(state, 1);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // abbr title is always one line, so looking for ending \"\\n\" here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x0A) { break; }\n  }\n\n  label = str.slice(2, labelEnd);\n  title = str.slice(labelEnd + 2, pos).trim();\n  if (title.length === 0) { return -1; }\n  if (!env.abbreviations) { env.abbreviations = {}; }\n  // prepend ':' to avoid conflict with Object.prototype members\n  if (typeof env.abbreviations[':' + label] === 'undefined') {\n    env.abbreviations[':' + label] = title;\n  }\n\n  return pos;\n}\n\nfunction abbr(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Parse inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i].type === 'inline' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseAbbr(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction normalizeLink(url) {\n  var normalized = replaceEntities(url);\n  // We shouldn't care about the result of malformed URIs,\n  // and should not throw an exception.\n  try {\n    normalized = decodeURI(normalized);\n  } catch (err) {}\n  return encodeURI(normalized);\n}\n\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkDestination(state, pos) {\n  var code, level, link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return false; }\n      if (code === 0x3E /* > */) {\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n        if (!state.parser.validateLink(link)) { return false; }\n        state.pos = pos + 1;\n        state.linkContent = link;\n        return true;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return false;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control chars\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return false; }\n\n  link = unescapeMd(state.src.slice(start, pos));\n  if (!state.parser.validateLink(link)) { return false; }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n}\n\n/**\n * Parse link title\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkTitle(state, pos) {\n  var code,\n      start = pos,\n      max = state.posMax,\n      marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return false; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n    if (code === marker) {\n      state.pos = pos + 1;\n      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n      return true;\n    }\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    pos++;\n  }\n\n  return false;\n}\n\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n}\n\nfunction parseReference(str, parser, options, env) {\n  var state, labelEnd, pos, max, code, start, href, title, label;\n\n  if (str.charCodeAt(0) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parser, options, env, []);\n  labelEnd = parseLinkLabel(state, 0);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  if (!parseLinkDestination(state, pos)) { return -1; }\n  href = state.linkContent;\n  pos = state.pos;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (pos = pos + 1; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n    title = state.linkContent;\n    pos = state.pos;\n  } else {\n    title = '';\n    pos = start;\n  }\n\n  // ensure that the end of the line is empty\n  while (pos < max && state.src.charCodeAt(pos) === 0x20/* space */) { pos++; }\n  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) { return -1; }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (typeof env.references[label] === 'undefined') {\n    env.references[label] = { title: title, href: href };\n  }\n\n  return pos;\n}\n\n\nfunction references(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  state.env.references = state.env.references || {};\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Scan definitions in paragraph inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i].type === 'inline' &&\n        tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseReference(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.inline.parse(tok.content, state.options, state.env, tok.children);\n    }\n  }\n}\n\nfunction footnote_block(state) {\n  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) { return; }\n\n  state.tokens = state.tokens.filter(function(tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false;\n      // prepend ':' to avoid conflict with Object.prototype members\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n    if (insideRef) { current.push(tok); }\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) { return; }\n  list = state.env.footnotes.list;\n\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n}\n\n// Enclose abbreviations in <abbr> tags\n//\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\n\n\n// from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\n\nfunction abbr2(state) {\n  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) { return; }\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(regEscape).join('|') + ')'\n            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') { continue; }\n    tokens = blockTokens[j].children;\n\n    // We scan from the end, to keep position when new tags added.\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token.type !== 'text') { continue; }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while ((m = reg.exec(text))) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) { continue; }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      }\n\n      // replace current node\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n}\n\n// Simple typographical replacements\n//\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  'c': '©',\n  'r': '®',\n  'p': '§',\n  'tm': '™'\n};\n\nfunction replaceScopedAbbr(str) {\n  if (str.indexOf('(') < 0) { return str; }\n\n  return str.replace(SCOPED_ABBR_RE, function(match, name) {\n    return SCOPED_ABBR[name.toLowerCase()];\n  });\n}\n\n\nfunction replace(state) {\n  var i, token, text, inlineTokens, blkIdx;\n\n  if (!state.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    inlineTokens = state.tokens[blkIdx].children;\n\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\n      token = inlineTokens[i];\n      if (token.type === 'text') {\n        text = token.content;\n\n        text = replaceScopedAbbr(text);\n\n        if (RARE_RE.test(text)) {\n          text = text\n            .replace(/\\+-/g, '±')\n            // .., ..., ....... -> …\n            // but ?..... & !..... -> ?.. & !..\n            .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n            // em-dash\n            .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n            // en-dash\n            .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n            .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n        }\n\n        token.content = text;\n      }\n    }\n  }\n}\n\n// Convert straight quotation marks to typographic ones\n//\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar PUNCT_RE = /[-\\s()\\[\\]]/;\nvar APOSTROPHE = '’';\n\n// This function returns true if the character at `pos`\n// could be inside a word.\nfunction isLetter(str, pos) {\n  if (pos < 0 || pos >= str.length) { return false; }\n  return !PUNCT_RE.test(str[pos]);\n}\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\n\nfunction smartquotes(state) {\n  /*eslint max-depth:0*/\n  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item,\n      canOpen, canClose, j, isSingle, blkIdx, tokens,\n      stack;\n\n  if (!state.options.typographer) { return; }\n\n  stack = [];\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    tokens = state.tokens[blkIdx].children;\n    stack.length = 0;\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n\n      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) { continue; }\n\n      thisLevel = tokens[i].level;\n\n      for (j = stack.length - 1; j >= 0; j--) {\n        if (stack[j].level <= thisLevel) { break; }\n      }\n      stack.length = j + 1;\n\n      text = token.content;\n      pos = 0;\n      max = text.length;\n\n      /*eslint no-labels:0,block-scoped-var:0*/\n      OUTER:\n      while (pos < max) {\n        QUOTE_RE.lastIndex = pos;\n        t = QUOTE_RE.exec(text);\n        if (!t) { break; }\n\n        lastSpace = !isLetter(text, t.index - 1);\n        pos = t.index + 1;\n        isSingle = (t[0] === \"'\");\n        nextSpace = !isLetter(text, pos);\n\n        if (!nextSpace && !lastSpace) {\n          // middle of word\n          if (isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n          continue;\n        }\n\n        canOpen = !nextSpace;\n        canClose = !lastSpace;\n\n        if (canClose) {\n          // this could be a closing quote, rewind the stack to get a match\n          for (j = stack.length - 1; j >= 0; j--) {\n            item = stack[j];\n            if (stack[j].level < thisLevel) { break; }\n            if (item.single === isSingle && stack[j].level === thisLevel) {\n              item = stack[j];\n              if (isSingle) {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n              } else {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n              }\n              stack.length = j;\n              continue OUTER;\n            }\n          }\n        }\n\n        if (canOpen) {\n          stack.push({\n            token: i,\n            pos: t.index,\n            single: isSingle,\n            level: thisLevel\n          });\n        } else if (canClose && isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Core parser `rules`\n */\n\nvar _rules = [\n  [ 'block',          block          ],\n  [ 'abbr',           abbr           ],\n  [ 'references',     references     ],\n  [ 'inline',         inline         ],\n  [ 'footnote_tail',  footnote_block  ],\n  [ 'abbr2',          abbr2          ],\n  [ 'replacements',   replace   ],\n  [ 'smartquotes',    smartquotes    ],\n];\n\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\n// Parser state class\n\nfunction StateBlock(src, parser, options, env, tokens) {\n  var ch, s, start, pos, len, indent, indent_found;\n\n  this.src = src;\n\n  // Shortcuts to simplify nested calls\n  this.parser = parser;\n\n  this.options = options;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // indent for each line\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent = 0;\n  indent_found = false;\n\n  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (ch === 0x20/* space */) {\n        indent++;\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n\n      indent_found = false;\n      indent = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== 0x20/* space */) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, first, last, queue, shift,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  // Opt: don't use push queue for single line;\n  if (line + 1 === end) {\n    first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n    return this.src.slice(first, last);\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    shift = this.tShift[line];\n    if (shift > indent) { shift = indent; }\n    if (shift < 0) { shift = 0; }\n\n    first = this.bMarks[line] + shift;\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\n// Code block (4 spaces padded)\n\nfunction code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// fences (``` lang, ~~~ lang)\n\nfunction fences(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  params = state.src.slice(pos, max).trim();\n\n  if (params.indexOf('`') >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.tShift[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  state.tokens.push({\n    type: 'fence',\n    params: params,\n    content: state.getLines(startLine + 1, nextLine, len, true),\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Block quotes\n\nfunction blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldBMarks, oldIndent, oldParentType, lines,\n      terminatorRules,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos > max) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  // check if we have an empty blockquote\n  pos = pos < max ? state.skipSpaces(pos) : pos;\n  lastLineEmpty = pos >= max;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.parser.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      pos = pos < max ? state.skipSpaces(pos) : pos;\n      lastLineEmpty = pos >= max;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n\n    // A negative number means that this is a paragraph continuation;\n    //\n    // Any negative number will do the job here, but it's better for it\n    // to be large enough to make any bugs obvious.\n    state.tShift[nextLine] = -1337;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  state.tokens.push({\n    type: 'blockquote_open',\n    lines: lines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.parser.tokenize(state, startLine, nextLine);\n  state.tokens.push({\n    type: 'blockquote_close',\n    level: --state.level\n  });\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n}\n\n// Horizontal rule\n\nfunction hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n\n  pos += state.tShift[startLine];\n\n  if (pos > max) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 one\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Lists\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  if (pos >= max) { return -1; }\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\n\nfunction list(state, startLine, endLine, silent) {\n  var nextLine,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    state.tokens.push({\n      type: 'ordered_list_open',\n      order: markerValue,\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n  } else {\n    state.tokens.push({\n      type: 'bullet_list_open',\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n  }\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.parser.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    contentStart = state.skipSpaces(posAfterMarker);\n    max = state.eMarks[nextLine];\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = contentStart - posAfterMarker;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // If indent is less than 1, assume that it's one, example:\n    //  \"-\\n  test\"\n    if (indentAfterMarker < 1) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;\n\n    // Run subparser & write tokens\n    state.tokens.push({\n      type: 'list_item_open',\n      lines: itemLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n\n    state.parser.tokenize(state, startLine, endLine, true);\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    state.tokens.push({\n      type: 'list_item_close',\n      level: --state.level\n    });\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Process footnote reference list\n\nfunction footnote(state, startLine, endLine, silent) {\n  var oldBMark, oldTShift, oldParentType, pos, label,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // line should be at least 5 chars - \"[^x]:\"\n  if (start + 4 > max) { return false; }\n\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n  if (silent) { return true; }\n  pos++;\n\n  if (!state.env.footnotes) { state.env.footnotes = {}; }\n  if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n  label = state.src.slice(start + 2, pos - 2);\n  state.env.footnotes.refs[':' + label] = -1;\n\n  state.tokens.push({\n    type: 'footnote_reference_open',\n    label: label,\n    level: state.level++\n  });\n\n  oldBMark = state.bMarks[startLine];\n  oldTShift = state.tShift[startLine];\n  oldParentType = state.parentType;\n  state.tShift[startLine] = state.skipSpaces(pos) - pos;\n  state.bMarks[startLine] = pos;\n  state.blkIndent += 4;\n  state.parentType = 'footnote';\n\n  if (state.tShift[startLine] < state.blkIndent) {\n    state.tShift[startLine] += state.blkIndent;\n    state.bMarks[startLine] -= state.blkIndent;\n  }\n\n  state.parser.tokenize(state, startLine, endLine, true);\n\n  state.parentType = oldParentType;\n  state.blkIndent -= 4;\n  state.tShift[startLine] = oldTShift;\n  state.bMarks[startLine] = oldBMark;\n\n  state.tokens.push({\n    type: 'footnote_reference_close',\n    level: --state.level\n  });\n\n  return true;\n}\n\n// heading (#, ##, ...)\n\nfunction heading(state, startLine, endLine, silent) {\n  var ch, level, tmp,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos >= max) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipCharsBack(max, 0x20, pos); // space\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  state.tokens.push({ type: 'heading_open',\n    hLevel: level,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  // only if header is not empty\n  if (pos < max) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, max).trim(),\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n  }\n  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\n\n  return true;\n}\n\n// lheading (---, ===)\n\nfunction lheading(state, startLine, endLine/*, silent*/) {\n  var marker, pos, max,\n      next = startLine + 1;\n\n  if (next >= endLine) { return false; }\n  if (state.tShift[next] < state.blkIndent) { return false; }\n\n  // Scan next line\n\n  if (state.tShift[next] - state.blkIndent > 3) { return false; }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }\n\n  pos = state.skipChars(pos, marker);\n\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) { return false; }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [ startLine, state.line - 1 ],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    level: state.level\n  });\n\n  return true;\n}\n\n// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\nvar html_blocks = {};\n\n[\n  'article',\n  'aside',\n  'button',\n  'blockquote',\n  'body',\n  'canvas',\n  'caption',\n  'col',\n  'colgroup',\n  'dd',\n  'div',\n  'dl',\n  'dt',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'iframe',\n  'li',\n  'map',\n  'object',\n  'ol',\n  'output',\n  'p',\n  'pre',\n  'progress',\n  'script',\n  'section',\n  'style',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'tr',\n  'thead',\n  'ul',\n  'video'\n].forEach(function (name) { html_blocks[name] = true; });\n\n// HTML block\n\n\nvar HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\nvar HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\nfunction isLetter$1(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\nfunction htmlblock(state, startLine, endLine, silent) {\n  var ch, match, nextLine,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine],\n      shift = state.tShift[startLine];\n\n  pos += shift;\n\n  if (!state.options.html) { return false; }\n\n  if (shift > 3 || pos + 2 >= max) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x21/* ! */ || ch === 0x3F/* ? */) {\n    // Directive start / comment start / processing instruction start\n    if (silent) { return true; }\n\n  } else if (ch === 0x2F/* / */ || isLetter$1(ch)) {\n\n    // Probably start or end of tag\n    if (ch === 0x2F/* \\ */) {\n      // closing tag\n      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n      if (!match) { return false; }\n    } else {\n      // opening tag\n      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n      if (!match) { return false; }\n    }\n    // Make sure tag name is valid\n    if (html_blocks[match[1].toLowerCase()] !== true) { return false; }\n    if (silent) { return true; }\n\n  } else {\n    return false;\n  }\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till empty line (block end).\n  nextLine = startLine + 1;\n  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n    nextLine++;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'htmlblock',\n    level: state.level,\n    lines: [ startLine, state.line ],\n    content: state.getLines(startLine, nextLine, 0, true)\n  });\n\n  return true;\n}\n\n// GFM table, non-standard\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, rows, cell,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least three lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n\n  // first character of the second line should be '|' or '-'\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  lineText = getLine(state, startLine + 1);\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\n\n  rows = lineText.split('|');\n  if (rows <= 2) { return false; }\n  aligns = [];\n  for (i = 0; i < rows.length; i++) {\n    t = rows[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === rows.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n  if (aligns.length !== rows.length) { return false; }\n  if (silent) { return true; }\n\n  state.tokens.push({\n    type: 'table_open',\n    lines: tableLines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.tokens.push({\n    type: 'thead_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n\n  state.tokens.push({\n    type: 'tr_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n  for (i = 0; i < rows.length; i++) {\n    state.tokens.push({\n      type: 'th_open',\n      align: aligns[i],\n      lines: [ startLine, startLine + 1 ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: rows[i].trim(),\n      lines: [ startLine, startLine + 1 ],\n      level: state.level,\n      children: []\n    });\n    state.tokens.push({ type: 'th_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tr_close', level: --state.level });\n  state.tokens.push({ type: 'thead_close', level: --state.level });\n\n  state.tokens.push({\n    type: 'tbody_open',\n    lines: tbodyLines = [ startLine + 2, 0 ],\n    level: state.level++\n  });\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n    state.tokens.push({ type: 'tr_open', level: state.level++ });\n    for (i = 0; i < rows.length; i++) {\n      state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });\n      // 0x7c === '|'\n      cell = rows[i].substring(\n          rows[i].charCodeAt(0) === 0x7c ? 1 : 0,\n          rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length\n      ).trim();\n      state.tokens.push({\n        type: 'inline',\n        content: cell,\n        level: state.level,\n        children: []\n      });\n      state.tokens.push({ type: 'td_close', level: --state.level });\n    }\n    state.tokens.push({ type: 'tr_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tbody_close', level: --state.level });\n  state.tokens.push({ type: 'table_close', level: --state.level });\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n}\n\n// Definition lists\n\n// Search `[:~][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipMarker(state, line) {\n  var pos, marker,\n      start = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  if (start >= max) { return -1; }\n\n  // Check bullet\n  marker = state.src.charCodeAt(start++);\n  if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n  pos = state.skipSpaces(start);\n\n  // require space after \":\"\n  if (start === pos) { return -1; }\n\n  // no empty definitions, e.g. \"  : \"\n  if (pos >= max) { return -1; }\n\n  return pos;\n}\n\nfunction markTightParagraphs$1(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\nfunction deflist(state, startLine, endLine, silent) {\n  var contentStart,\n      ddLine,\n      dtLine,\n      itemLines,\n      listLines,\n      listTokIdx,\n      nextLine,\n      oldIndent,\n      oldDDIndent,\n      oldParentType,\n      oldTShift,\n      oldTight,\n      prevEmptyEnd,\n      tight;\n\n  if (silent) {\n    // quirk: validation mode validates a dd block only, not a whole deflist\n    if (state.ddIndent < 0) { return false; }\n    return skipMarker(state, startLine) >= 0;\n  }\n\n  nextLine = startLine + 1;\n  if (state.isEmpty(nextLine)) {\n    if (++nextLine > endLine) { return false; }\n  }\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n  contentStart = skipMarker(state, nextLine);\n  if (contentStart < 0) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  state.tokens.push({\n    type: 'dl_open',\n    lines: listLines = [ startLine, 0 ],\n    level: state.level++\n  });\n\n  //\n  // Iterate list items\n  //\n\n  dtLine = startLine;\n  ddLine = nextLine;\n\n  // One definition list can contain multiple DTs,\n  // and one DT can be followed by multiple DDs.\n  //\n  // Thus, there is two loops here, and label is\n  // needed to break out of the second one\n  //\n  /*eslint no-labels:0,block-scoped-var:0*/\n  OUTER:\n  for (;;) {\n    tight = true;\n    prevEmptyEnd = false;\n\n    state.tokens.push({\n      type: 'dt_open',\n      lines: [ dtLine, dtLine ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n      level: state.level + 1,\n      lines: [ dtLine, dtLine ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'dt_close',\n      level: --state.level\n    });\n\n    for (;;) {\n      state.tokens.push({\n        type: 'dd_open',\n        lines: itemLines = [ nextLine, 0 ],\n        level: state.level++\n      });\n\n      oldTight = state.tight;\n      oldDDIndent = state.ddIndent;\n      oldIndent = state.blkIndent;\n      oldTShift = state.tShift[ddLine];\n      oldParentType = state.parentType;\n      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n      state.tight = true;\n      state.parentType = 'deflist';\n\n      state.parser.tokenize(state, ddLine, endLine, true);\n\n      // If any of list item is tight, mark list as tight\n      if (!state.tight || prevEmptyEnd) {\n        tight = false;\n      }\n      // Item become loose if finish with empty line,\n      // but we should filter last element, because it means list finish\n      prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n      state.tShift[ddLine] = oldTShift;\n      state.tight = oldTight;\n      state.parentType = oldParentType;\n      state.blkIndent = oldIndent;\n      state.ddIndent = oldDDIndent;\n\n      state.tokens.push({\n        type: 'dd_close',\n        level: --state.level\n      });\n\n      itemLines[1] = nextLine = state.line;\n\n      if (nextLine >= endLine) { break OUTER; }\n\n      if (state.tShift[nextLine] < state.blkIndent) { break OUTER; }\n      contentStart = skipMarker(state, nextLine);\n      if (contentStart < 0) { break; }\n\n      ddLine = nextLine;\n\n      // go to the next loop iteration:\n      // insert DD tag and repeat checking\n    }\n\n    if (nextLine >= endLine) { break; }\n    dtLine = nextLine;\n\n    if (state.isEmpty(dtLine)) { break; }\n    if (state.tShift[dtLine] < state.blkIndent) { break; }\n\n    ddLine = dtLine + 1;\n    if (ddLine >= endLine) { break; }\n    if (state.isEmpty(ddLine)) { ddLine++; }\n    if (ddLine >= endLine) { break; }\n\n    if (state.tShift[ddLine] < state.blkIndent) { break; }\n    contentStart = skipMarker(state, ddLine);\n    if (contentStart < 0) { break; }\n\n    // go to the next loop iteration:\n    // insert DT and DD tags and repeat checking\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: 'dl_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs$1(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Paragraph\n\nfunction paragraph(state, startLine/*, endLine*/) {\n  var endLine, content, terminate, i, l,\n      nextLine = startLine + 1,\n      terminatorRules;\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  if (nextLine < endLine && !state.isEmpty(nextLine)) {\n    terminatorRules = state.parser.ruler.getRules('paragraph');\n\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.tShift[nextLine] - state.blkIndent > 3) { continue; }\n\n      // Some tags can terminate paragraph without empty line.\n      terminate = false;\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      if (terminate) { break; }\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n  if (content.length) {\n    state.tokens.push({\n      type: 'paragraph_open',\n      tight: false,\n      lines: [ startLine, state.line ],\n      level: state.level\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: content,\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'paragraph_close',\n      tight: false,\n      level: state.level\n    });\n  }\n\n  return true;\n}\n\n/**\n * Parser rules\n */\n\nvar _rules$1 = [\n  [ 'code',       code ],\n  [ 'fences',     fences,     [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'blockquote', blockquote, [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'hr',         hr,         [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'list',       list,       [ 'paragraph', 'blockquote' ] ],\n  [ 'footnote',   footnote,   [ 'paragraph' ] ],\n  [ 'heading',    heading,    [ 'paragraph', 'blockquote' ] ],\n  [ 'lheading',   lheading ],\n  [ 'htmlblock',  htmlblock,  [ 'paragraph', 'blockquote' ] ],\n  [ 'table',      table,      [ 'paragraph' ] ],\n  [ 'deflist',    deflist,    [ 'paragraph' ] ],\n  [ 'paragraph',  paragraph ]\n];\n\n/**\n * Block Parser class\n *\n * @api private\n */\n\nfunction ParserBlock() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$1.length; i++) {\n    this.ruler.push(_rules$1[i][0], _rules$1[i][1], {\n      alt: (_rules$1[i][2] || []).slice()\n    });\n  }\n}\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n * @param  {Number} `startLine`\n * @param  {Number} `endLine`\n * @api private\n */\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var line = startLine;\n  var hasEmptyLines = false;\n  var ok, i;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) {\n      break;\n    }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.tShift[line] < state.blkIndent) {\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        break;\n      }\n    }\n\n    // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n\n      // two empty lines should stop the parser in list mode\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\n      state.line = line;\n    }\n  }\n};\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE  = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar SPACES_RE    = /\\u00a0/g;\n\n/**\n * Tokenize the given `str`.\n *\n * @param  {String} `str` Source string\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserBlock.prototype.parse = function (str, options, env, outTokens) {\n  var state, lineStart = 0, lastTabPos = 0;\n  if (!str) { return []; }\n\n  // Normalize spaces\n  str = str.replace(SPACES_RE, ' ');\n\n  // Normalize newlines\n  str = str.replace(NEWLINES_RE, '\\n');\n\n  // Replace tabs with proper number of spaces (1..4)\n  if (str.indexOf('\\t') >= 0) {\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n\n  state = new StateBlock(str, this, options, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x5C/* \\ */:\n    case 0x60/* ` */:\n    case 0x2A/* * */:\n    case 0x5F/* _ */:\n    case 0x5E/* ^ */:\n    case 0x5B/* [ */:\n    case 0x5D/* ] */:\n    case 0x21/* ! */:\n    case 0x26/* & */:\n    case 0x3C/* < */:\n    case 0x3E/* > */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x40/* @ */:\n    case 0x7E/* ~ */:\n    case 0x2B/* + */:\n    case 0x3D/* = */:\n    case 0x3A/* : */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n}\n\n// Proceess '\\n'\n\nfunction newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Strip out all trailing spaces on this line.\n        for (var i = pmax - 2; i >= 0; i--) {\n          if (state.pending.charCodeAt(i) !== 0x20) {\n            state.pending = state.pending.substring(0, i + 1);\n            break;\n          }\n        }\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n\n    } else {\n      state.push({\n        type: 'softbreak',\n        level: state.level\n      });\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n}\n\n// Proceess escaped chars and hardbreaks\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nfunction escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n}\n\n// Parse backticks\n\nfunction backticks(state, silent) {\n  var start, max, marker, matchStart, matchEnd,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        state.push({\n          type: 'code',\n          content: state.src.slice(pos, matchStart)\n                              .replace(/[ \\n]+/g, ' ')\n                              .trim(),\n          block: false,\n          level: state.level\n        });\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n}\n\n// Process ~~deleted text~~\n\nfunction del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x7E/* ~ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x7E/* ~ */) { pos++; }\n  if (pos > start + 3) {\n    // sequence of 4+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x7E/* ~ */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x7E/* ~ */ && lastChar !== 0x7E/* ~ */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '~~'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '~~'\n            stack++;\n          } // else {\n            //  // standalone ' ~~ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'del_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'del_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ++inserted text++\n\nfunction ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '++'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '++'\n            stack++;\n          } // else {\n            //  // standalone ' ++ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'ins_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'ins_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ==highlighted text==\n\nfunction mark(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x3D/* = */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x3D/* = */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x3D/* = */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x3D/* = */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x3D/* = */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x3D/* = */ && lastChar !== 0x3D/* = */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '=='\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '=='\n            stack++;\n          } // else {\n            //  // standalone ' == ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'mark_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'mark_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process *this* and _that_\n\nfunction isAlphaNum(code) {\n  return (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) ||\n         (code >= 0x41 /* A */ && code <= 0x5A /* Z */) ||\n         (code >= 0x61 /* a */ && code <= 0x7A /* z */);\n}\n\n// parse sequence of emphasis markers,\n// \"start\" should point at a valid marker\nfunction scanDelims(state, start) {\n  var pos = start, lastChar, nextChar, count,\n      can_open = true,\n      can_close = true,\n      max = state.posMax,\n      marker = state.src.charCodeAt(start);\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n  while (pos < max && state.src.charCodeAt(pos) === marker) { pos++; }\n  if (pos >= max) { can_open = false; }\n  count = pos - start;\n\n  if (count >= 4) {\n    // sequence of four or more unescaped markers can't start/end an emphasis\n    can_open = can_close = false;\n  } else {\n    nextChar = pos < max ? state.src.charCodeAt(pos) : -1;\n\n    // check whitespace conditions\n    if (nextChar === 0x20 || nextChar === 0x0A) { can_open = false; }\n    if (lastChar === 0x20 || lastChar === 0x0A) { can_close = false; }\n\n    if (marker === 0x5F /* _ */) {\n      // check if we aren't inside the word\n      if (isAlphaNum(lastChar)) { can_open = false; }\n      if (isAlphaNum(nextChar)) { can_close = false; }\n    }\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    delims: count\n  };\n}\n\nfunction emphasis(state, silent) {\n  var startCount,\n      count,\n      found,\n      oldCount,\n      newCount,\n      stack,\n      res,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker !== 0x5F/* _ */ && marker !== 0x2A /* * */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n\n  res = scanDelims(state, start);\n  startCount = res.delims;\n  if (!res.can_open) {\n    state.pos += startCount;\n    if (!silent) { state.pending += state.src.slice(start, state.pos); }\n    return true;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + startCount;\n  stack = [ startCount ];\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === marker) {\n      res = scanDelims(state, state.pos);\n      count = res.delims;\n      if (res.can_close) {\n        oldCount = stack.pop();\n        newCount = count;\n\n        while (oldCount !== newCount) {\n          if (newCount < oldCount) {\n            stack.push(oldCount - newCount);\n            break;\n          }\n\n          // assert(newCount > oldCount)\n          newCount -= oldCount;\n\n          if (stack.length === 0) { break; }\n          state.pos += oldCount;\n          oldCount = stack.pop();\n        }\n\n        if (stack.length === 0) {\n          startCount = oldCount;\n          found = true;\n          break;\n        }\n        state.pos += count;\n        continue;\n      }\n\n      if (res.can_open) { stack.push(count); }\n      state.pos += count;\n      continue;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + startCount;\n\n  if (!silent) {\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_open', level: state.level++ });\n    }\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_open', level: state.level++ });\n    }\n\n    state.parser.tokenize(state);\n\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_close', level: --state.level });\n    }\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_close', level: --state.level });\n    }\n  }\n\n  state.pos = state.posMax + startCount;\n  state.posMax = max;\n  return true;\n}\n\n// Process ~subscript~\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sub(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sub',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process ^superscript^\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE$1 = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sup(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sup',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE$1, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process [links](<to> \"stuff\")\n\n\nfunction links(state, silent) {\n  var labelStart,\n      labelEnd,\n      label,\n      href,\n      title,\n      pos,\n      ref,\n      code,\n      isImage = false,\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker === 0x21/* ! */) {\n    isImage = true;\n    marker = state.src.charCodeAt(++start);\n  }\n\n  if (marker !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 1;\n  labelEnd = parseLinkLabel(state, start);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    if (parseLinkDestination(state, pos)) {\n      href = state.linkContent;\n      pos = state.pos;\n    } else {\n      href = '';\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n      title = state.linkContent;\n      pos = state.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n\n    // do not allow nested reference links\n    if (state.linkLevel > 0) { return false; }\n\n    // [foo]  [bar]\n    //      ^^ optional whitespace (can include newlines)\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = start - 1;\n      }\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) {\n      if (typeof label === 'undefined') {\n        pos = labelEnd + 1;\n      }\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    if (isImage) {\n      state.push({\n        type: 'image',\n        src: href,\n        title: title,\n        alt: state.src.substr(labelStart, labelEnd - labelStart),\n        level: state.level\n      });\n    } else {\n      state.push({\n        type: 'link_open',\n        href: href,\n        title: title,\n        level: state.level++\n      });\n      state.linkLevel++;\n      state.parser.tokenize(state);\n      state.linkLevel--;\n      state.push({ type: 'link_close', level: --state.level });\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// Process inline footnotes (^[...])\n\n\nfunction footnote_inline(state, silent) {\n  var labelStart,\n      labelEnd,\n      footnoteId,\n      oldLength,\n      max = state.posMax,\n      start = state.pos;\n\n  if (start + 2 >= max) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 2;\n  labelEnd = parseLinkLabel(state, start + 1);\n\n  // parser failed to find ']', so it's not a valid note\n  if (labelEnd < 0) { return false; }\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n    footnoteId = state.env.footnotes.list.length;\n\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      level: state.level\n    });\n    state.linkLevel++;\n    oldLength = state.tokens.length;\n    state.parser.tokenize(state);\n    state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };\n    state.linkLevel--;\n  }\n\n  state.pos = labelEnd + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process footnote references ([^...])\n\nfunction footnote_ref(state, silent) {\n  var label,\n      pos,\n      footnoteId,\n      footnoteSubId,\n      max = state.posMax,\n      start = state.pos;\n\n  // should be at least 4 chars - \"[^x]\"\n  if (start + 3 > max) { return false; }\n\n  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos >= max) { return false; }\n  pos++;\n\n  label = state.src.slice(start + 2, pos - 1);\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n  if (!silent) {\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n    if (state.env.footnotes.refs[':' + label] < 0) {\n      footnoteId = state.env.footnotes.list.length;\n      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n      state.env.footnotes.refs[':' + label] = footnoteId;\n    } else {\n      footnoteId = state.env.footnotes.refs[':' + label];\n    }\n\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\n    state.env.footnotes.list[footnoteId].count++;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      subId: footnoteSubId,\n      level: state.level\n    });\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// List of valid url schemas, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#autolinks\n\nvar url_schemas = [\n  'coap',\n  'doi',\n  'javascript',\n  'aaa',\n  'aaas',\n  'about',\n  'acap',\n  'cap',\n  'cid',\n  'crid',\n  'data',\n  'dav',\n  'dict',\n  'dns',\n  'file',\n  'ftp',\n  'geo',\n  'go',\n  'gopher',\n  'h323',\n  'http',\n  'https',\n  'iax',\n  'icap',\n  'im',\n  'imap',\n  'info',\n  'ipp',\n  'iris',\n  'iris.beep',\n  'iris.xpc',\n  'iris.xpcs',\n  'iris.lwz',\n  'ldap',\n  'mailto',\n  'mid',\n  'msrp',\n  'msrps',\n  'mtqp',\n  'mupdate',\n  'news',\n  'nfs',\n  'ni',\n  'nih',\n  'nntp',\n  'opaquelocktoken',\n  'pop',\n  'pres',\n  'rtsp',\n  'service',\n  'session',\n  'shttp',\n  'sieve',\n  'sip',\n  'sips',\n  'sms',\n  'snmp',\n  'soap.beep',\n  'soap.beeps',\n  'tag',\n  'tel',\n  'telnet',\n  'tftp',\n  'thismessage',\n  'tn3270',\n  'tip',\n  'tv',\n  'urn',\n  'vemmi',\n  'ws',\n  'wss',\n  'xcon',\n  'xcon-userid',\n  'xmlrpc.beep',\n  'xmlrpc.beeps',\n  'xmpp',\n  'z39.50r',\n  'z39.50s',\n  'adiumxtra',\n  'afp',\n  'afs',\n  'aim',\n  'apt',\n  'attachment',\n  'aw',\n  'beshare',\n  'bitcoin',\n  'bolo',\n  'callto',\n  'chrome',\n  'chrome-extension',\n  'com-eventbrite-attendee',\n  'content',\n  'cvs',\n  'dlna-playsingle',\n  'dlna-playcontainer',\n  'dtn',\n  'dvb',\n  'ed2k',\n  'facetime',\n  'feed',\n  'finger',\n  'fish',\n  'gg',\n  'git',\n  'gizmoproject',\n  'gtalk',\n  'hcp',\n  'icon',\n  'ipn',\n  'irc',\n  'irc6',\n  'ircs',\n  'itms',\n  'jar',\n  'jms',\n  'keyparc',\n  'lastfm',\n  'ldaps',\n  'magnet',\n  'maps',\n  'market',\n  'message',\n  'mms',\n  'ms-help',\n  'msnim',\n  'mumble',\n  'mvn',\n  'notes',\n  'oid',\n  'palm',\n  'paparazzi',\n  'platform',\n  'proxy',\n  'psyc',\n  'query',\n  'res',\n  'resource',\n  'rmi',\n  'rsync',\n  'rtmp',\n  'secondlife',\n  'sftp',\n  'sgn',\n  'skype',\n  'smb',\n  'soldat',\n  'spotify',\n  'ssh',\n  'steam',\n  'svn',\n  'teamspeak',\n  'things',\n  'udp',\n  'unreal',\n  'ut2004',\n  'ventrilo',\n  'view-source',\n  'webcal',\n  'wtai',\n  'wyciwyg',\n  'xfire',\n  'xri',\n  'ymsgr'\n];\n\n// Process autolinks '<protocol:...>'\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n\nfunction autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n    if (!state.parser.validateLink(url)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n\n    url = emailMatch[0].slice(1, -1);\n\n    fullUrl = normalizeLink('mailto:' + url);\n    if (!state.parser.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n}\n\n// Regexps to match html elements\n\nfunction replace$1(regex, options) {\n  regex = regex.source;\n  options = options || '';\n\n  return function self(name, val) {\n    if (!name) {\n      return new RegExp(regex, options);\n    }\n    val = val.source || val;\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\n\nvar attr_name     = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\n\nvar unquoted      = /[^\"'=<>`\\x00-\\x20]+/;\nvar single_quoted = /'[^']*'/;\nvar double_quoted = /\"[^\"]*\"/;\n\n/*eslint no-spaced-func:0*/\nvar attr_value  = replace$1(/(?:unquoted|single_quoted|double_quoted)/)\n                    ('unquoted', unquoted)\n                    ('single_quoted', single_quoted)\n                    ('double_quoted', double_quoted)\n                    ();\n\nvar attribute   = replace$1(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)\n                    ('attr_name', attr_name)\n                    ('attr_value', attr_value)\n                    ();\n\nvar open_tag    = replace$1(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)\n                    ('attribute', attribute)\n                    ();\n\nvar close_tag   = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\nvar comment     = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\nvar processing  = /<[?].*?[?]>/;\nvar declaration = /<![A-Z]+\\s+[^>]*>/;\nvar cdata       = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\n\nvar HTML_TAG_RE = replace$1(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)\n  ('open_tag', open_tag)\n  ('close_tag', close_tag)\n  ('comment', comment)\n  ('processing', processing)\n  ('declaration', declaration)\n  ('cdata', cdata)\n  ();\n\n// Process html tags\n\n\nfunction isLetter$2(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nfunction htmltag(state, silent) {\n  var ch, match, max, pos = state.pos;\n\n  if (!state.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter$2(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    state.push({\n      type: 'htmltag',\n      content: state.src.slice(pos, pos + match[0].length),\n      level: state.level\n    });\n  }\n  state.pos += match[0].length;\n  return true;\n}\n\n// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nfunction entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        var decoded = decodeEntity(match[1]);\n        if (match[1] !== decoded) {\n          if (!silent) { state.pending += decoded; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n}\n\n/**\n * Inline Parser `rules`\n */\n\nvar _rules$2 = [\n  [ 'text',            text ],\n  [ 'newline',         newline ],\n  [ 'escape',          escape ],\n  [ 'backticks',       backticks ],\n  [ 'del',             del ],\n  [ 'ins',             ins ],\n  [ 'mark',            mark ],\n  [ 'emphasis',        emphasis ],\n  [ 'sub',             sub ],\n  [ 'sup',             sup ],\n  [ 'links',           links ],\n  [ 'footnote_inline', footnote_inline ],\n  [ 'footnote_ref',    footnote_ref ],\n  [ 'autolink',        autolink ],\n  [ 'htmltag',         htmltag ],\n  [ 'entity',          entity ]\n];\n\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$2.length; i++) {\n    this.ruler.push(_rules$2[i][0], _rules$2[i][1]);\n  }\n\n  // Can be overridden with a custom validator\n  this.validateLink = validateLink;\n}\n\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file', 'data' ];\n  var str = url.trim().toLowerCase();\n  // Care about digital entities \"javascript&#x3A;alert(1)\"\n  str = replaceEntities(str);\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n  return true;\n}\n\n// Remarkable default options\n\nvar defaultConfig = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'replacements',\n        'smartquotes',\n        'references',\n        'abbr2',\n        'footnote_tail'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'footnote',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph',\n        'table'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'del',\n        'emphasis',\n        'entity',\n        'escape',\n        'footnote_ref',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n// Remarkable default options\n\nvar fullConfig = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes:       '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight:     null,\n\n    maxNesting:    20            // Internal protection, recursion limit\n  },\n\n  components: {\n    // Don't restrict core/block/inline rules\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n\n// Commonmark default options\n\nvar commonmarkConfig = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'abbr2'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n/**\n * Preset configs\n */\n\nvar config = {\n  'default': defaultConfig,\n  'full': fullConfig,\n  'commonmark': commonmarkConfig\n};\n\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  if (options && options.linkify != null) {\n    console.warn(\n      'linkify option is removed. Use linkify plugin instead:\\n\\n' +\n      'import Remarkable from \\'remarkable\\';\\n' +\n      'import linkify from \\'remarkable/linkify\\';\\n' +\n      'new Remarkable().use(linkify)\\n'\n    );\n  }\n\n  this.inline   = new ParserInline();\n  this.block    = new ParserBlock();\n  this.core     = new Core();\n  this.renderer = new Renderer();\n  this.ruler    = new Ruler();\n\n  this.options  = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }\n  if (presets.options) { self.set(presets.options); }\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n\n\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n\nexport { Remarkable, utils };\n","import { render } from \"./AddItemModal.vue?vue&type=template&id=dde3ac16&scoped=true\"\nimport script from \"./AddItemModal.vue?vue&type=script&lang=js\"\nexport * from \"./AddItemModal.vue?vue&type=script&lang=js\"\n\nimport \"./AddItemModal.vue?vue&type=style&index=0&id=dde3ac16&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-colors-server\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dde3ac16\"]])\n\nexport default __exports__","import { render } from \"./Items.vue?vue&type=template&id=4b1a95a0\"\nimport script from \"./Items.vue?vue&type=script&lang=js\"\nexport * from \"./Items.vue?vue&type=script&lang=js\"\n\nimport \"./Items.vue?vue&type=style&index=0&id=4b1a95a0&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\tg-colors-server\\\\admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","_createVNode","_component_AddItemModal","visible","$data","formData","mode","_ctx","_component_Table","fields","postData","$options","actions","rows","editMode","name","class","_createElementVNode","_component_CButton","color","onClick","_component_CModal","size","backdrop","alignment","$props","onClose","_component_CForm","novalidate","validated","ref","onChange","onSubmit","style","_component_CModalHeader","_component_CModalTitle","_component_CModalBody","_component_CFormInput","title","placeholder","id","feedbackValid","feedbackInvalid","required","_hoisted_1","_hoisted_2","_Fragment","project","_createBlock","_component_CFormCheck","key","checked","category_name","type","value","label","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","sizeName","_component_CInputGroup","variant","materialName","_hoisted_7","accept","multiple","_hoisted_8","length","item","index","src","_component_QuillEditor","theme","toolbar","_component_CModalFooter","extend","destination","i","arguments","source","hasOwnProperty","repeat","character","count","Array","join","trimLeadingNewlines","string","replace","trimTrailingNewlines","indexEnd","substring","blockElements","isBlock","node","is","voidElements","isVoid","hasVoid","has","meaningfulWhenBlankElements","isMeaningfulWhenBlank","hasMeaningfulWhenBlank","tagNames","indexOf","nodeName","getElementsByTagName","some","tagName","rules","cleanAttribute","attribute","Rules","options","this","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","push","findRule","rule","filterValue","filter","toLowerCase","isArray","TypeError","call","collapseWhitespace","element","isPre","firstChild","prevText","keepLeadingWs","prev","next","nodeType","text","data","test","substr","remove","nextNode","nextSibling","parentNode","removeChild","current","paragraph","content","lineBreak","br","heading","hLevel","Number","charAt","headingStyle","underline","blockquote","list","parent","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","prototype","children","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","match","className","language","code","fenceChar","fence","fenceSize","fenceInCodeRegex","RegExp","exec","horizontalRule","hr","inlineLink","linkStyle","href","referenceLink","reference","linkReferenceStyle","references","append","emphasis","trim","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","delimiter","matches","image","alt","titlePart","add","unshift","keep","forNode","isBlank","forEach","fn","root","window","canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","e","createHTMLParser","shouldUseActiveX","doc","ActiveXObject","designMode","open","write","close","document","implementation","createHTMLDocument","useActiveX","_htmlParser","HTMLParser","RootNode","input","htmlParser","getElementById","cloneNode","preformattedCode","isPreOrCode","Node","isCode","flankingWhitespace","leading","trailing","edges","edgeWhitespace","leadingAscii","isFlankedByWhitespace","leadingNonAscii","trailingAscii","trailingNonAscii","m","side","sibling","regExp","isFlanked","nodeValue","reduce","escapes","TurndownService","defaults","outerHTML","process","self","childNodes","output","escape","replacementForNode","postProcess","whitespace","s1","s2","nls","Math","max","separator","canConvert","turndown","use","plugin","addRule","accumulator","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","unescapeTest","unescape","_","n","String","fromCharCode","parseInt","caret","edit","regex","opt","obj","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","merge","target","Object","splitCells","tableRow","row","offset","str","escaped","curr","cells","split","shift","pop","splice","c","invert","l","suffLen","currChar","slice","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","state","inLink","token","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","matchIndentInNode","indentInNode","Tokenizer","constructor","space","block","newline","fences","lang","inline","_escapes","trimmed","depth","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","items","itemRegex","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","trimRight","top","spacers","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","header","align","j","k","lheading","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","static","lex","lastToken","cutSrc","lastParagraphClipped","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","startatt","listitem","checkbox","tablerow","tablecell","flags","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","marked","callback","done","err","pending","setTimeout","onError","message","Promise","all","then","catch","setOptions","args","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","values","concat","lexInline","textarea","decodeEntity","createElement","innerHTML","hasOwn","object","assign","sources","UNESCAPE_MD_RE","unescapeMd","isValidEntityCode","fromCodePoint","surrogate1","surrogate2","NAMED_ENTITY_RE","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","decoded","replaceEntities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","nextToken","idx","tight","blockquote_open","blockquote_close","getBreak","env","instance","fenceName","highlighted","langClass","langName","params","fence_custom","heading_open","heading_close","xhtmlOut","bullet_list_open","bullet_list_close","list_item_open","list_item_close","ordered_list_open","order","ordered_list_close","paragraph_open","paragraph_close","addBreak","link_open","linkTarget","link_close","suffix","table_open","table_close","thead_open","thead_close","tbody_open","tbody_close","tr_open","tr_close","th_open","th_close","td_open","td_close","strong_open","strong_close","em_open","em_close","del_open","del_close","ins_open","ins_close","mark_open","mark_close","sub","sup","hardbreak","softbreak","htmlblock","htmltag","abbr_open","abbr_close","footnote_ref","subId","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","dl_open","dt_open","dd_open","dl_close","dt_close","dd_close","Ruler","__rules__","__cache__","inlineMode","lines","StateInline","parserInline","outTokens","pos","posMax","pendingLevel","cache","isInLabel","linkLevel","linkContent","labelUnmatchedScopes","parseLinkLabel","found","marker","labelEnd","oldPos","oldFlag","skipToken","parseAbbr","abbreviations","abbr","normalizeLink","normalized","decodeURI","parseLinkDestination","validateLink","parseLinkTitle","normalizeReference","toUpperCase","parseReference","tok","footnote_block","lastParagraph","currentLabel","insideRef","refTokens","footnotes","renderInline","_rules","len","render","__find__","__compile__","chains","enabled","altName","chain","at","before","beforeName","ruleName","after","afterName","enable","strict","disable","getRules","chainName","pushPending","cacheSet","cacheGet","PUNCT_CHARS","regEscape","s","abbr2","nodes","reg","regText","abbrRegExp","x","sort","a","RARE_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceScopedAbbr","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","PUNCT_RE","APOSTROPHE","isLetter","replaceAt","smartquotes","thisLevel","lastSpace","nextSpace","canOpen","canClose","isSingle","stack","OUTER","single","quotes","Core","ruler","StateBlock","indent_found","bMarks","eMarks","tShift","blkIndent","lineMax","parentType","ddIndent","startLine","endLine","last","isEmpty","getLines","mem","haveEndMarker","skipChars","skipSpaces","lastLineEmpty","oldTShift","oldBMarks","oldIndent","oldParentType","terminatorRules","terminate","maxNesting","tokenize","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","oldTight","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","contentStart","listTokIdx","prevEmptyEnd","listLines","itemLines","footnote","oldBMark","refs","tmp","skipCharsBack","skipEmptyLines","from","begin","end","keepLastLF","first","queue","html_blocks","HTML_TAG_OPEN_RE","HTML_TAG_CLOSE_RE","isLetter$1","lc","getLine","lineText","aligns","tableLines","tbodyLines","skipMarker","markTightParagraphs$1","deflist","ddLine","dtLine","oldDDIndent","_rules$1","ParserBlock","ok","hasEmptyLines","TABS_SCAN_RE","NEWLINES_RE","SPACES_RE","isTerminatorChar","pmax","lineStart","lastTabPos","ESCAPED","backticks","matchStart","matchEnd","lastChar","ins","mark","isAlphaNum","scanDelims","can_open","can_close","delims","startCount","oldCount","newCount","res","UNESCAPE_RE","UNESCAPE_RE$1","labelStart","isImage","footnote_inline","footnoteId","oldLength","footnoteSubId","url_schemas","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","replace$1","attr_name","unquoted","single_quoted","double_quoted","attr_value","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","isLetter$2","DIGITAL_RE","NAMED_RE","entity","_rules$2","ParserInline","BAD_PROTOCOLS","cached_pos","defaultConfig","components","core","fullConfig","commonmarkConfig","config","StateCore","Remarkable","preset","linkify","configure","set","presets","myApi","axios","withCredentials","QuillEditor","props","validator","description","preview","image_list","tags_array","Set","options_object","options_array","textMd2","textEditMode","formValid","preview_list","distinct_materials","distinct_sizes","tempSize","tempMaterial","updated","material","price","md","log","replaceAll","$refs","postTextEditor","pasteHTML","el","preview_name","$store","publicPath","getElementsByClassName","classList","projects","getProjects","tags","methods","addMaterial","size_template","fromEntries","entries","addSize","new_oo_entries","dropMaterial","dropSize","get","eventBus","previewMultiImage","event","files","reader","FileReader","onload","readAsDataURL","reset","dropFile","addNewPost","changeP","closeModal","constractFromData","isEdit","getHTML","FormData","turndownService","v","JSON","stringify","addNewing","post","headers","editNewing","put","__exports__","credentials","AddItemModal","Table","formVisible","dataActions","Дублировать","action","duble","Изменить","change","Удалить","delete","tableFieldNames","created","formMode","category","$route","categoryName","elObj","take","page","tagsArray","undefined","confirm"],"sourceRoot":""}